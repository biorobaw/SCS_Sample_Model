<?xml version="1.0" encoding="us-ascii"?>


<experiment>

	<!-- defines variables to be used in the xml file -->
	<variables  PROJECT="com.github.biorobaw.scs_models.scs_sample_model" numActions="8"/>
	
	<!-- choose SCSDisplay vs NoDisplay, if no disply set sync to false -->
	<display class="$(SCS).gui.displays.SCSDisplay"
		window="-2,-2,4,4" syncDisplay="false " />
		
	<!-- choose a simulator -->
	<simulator
		class="$(SCS).simulation.scs_simulator.SCSSimulator"
		simulation_step_ms="30" simulation_speed="15" /> <!-- max speed = 15 -->

	<!-- load a maze, alternatively you could define it here instead of using an extra file -->
	<maze class="$(SCS).maze.Maze"
		  file="experiments/mazes/sample_maze.xml" />

	<!-- create a template for the model -->
	<template id="model" class="$(PROJECT).model.SampleModel"
		config_param_1="sample param 1" 
		config_param_2="sample param 2"
		
	/>

	<!-- create a template for the robot -->
	<template id="robot" class="$(SCS).robot.Robot">
		<!-- choose which proxy will be used to control the robot -->
		<robot_proxy class="$(SCS).robot.proxies.SCSRobotProxy"/>
		
		<!-- add modules to be loaded -->
		<module class="$(SCS).robot.modules.localization.GlobalLocalization"/>
		<module class="$(SCS).robot.modules.FeederModule" 
				max_feeding_distance="0.1"/><!-- feeding distance is optional, defaults to 0.1m -->	
		<module class="$(SCS).robot.modules.distance_sensing.SCSWallDistanceSensors"
			 	num_sensors="$(numActions)"/>  
	</template>


	<!-- create groups of rats (subjects) -->
	<!-- for each group define the trials that the group will have to perform
		 as well as the subjects that compose the group -->
	<!-- for each subject define the model that controls the subject as well as the robot used -->
	<groups>
		<g1 trials="sample_trial"> 
			<sub_1 template="model" >
					   <robot template="robot"/>
			</sub_1>
		</g1>
	</groups>
	
	
	<!-- define the trials -->
	<trial id="sample_trial" numEpisodes="$(numEpisodes)"> <!-- numEpisodes will be a configuration parameter -->
		<episodeTasks>
			<t1 class="$(SCS).tasks.episode.feeders.SetFoodAllFeeders" /> <!-- at each episode put food on each feeder -->
			<init_pos class="$(SCS).tasks.episode.robot.PlaceRobotInitially" subject_id="sub_1" pointXYW="0,0.5,3.14159265359"/>	
		</episodeTasks>
		<cycleTasks>
			<!-- the name of task nodes does not matter, you can name them however you wish -->
			<log_sub_1 class = "$(PROJECT).tasks.SampleLog" subject_id="sub_1"/>
			<sample_task class = "$(PROJECT).tasks.SampleTask" sample_str_param="$(sample_str)" sample_int_param="$(sample_int)"/>
			<maxCyclesCondition class="$(SCS).tasks.cycle.condition.MaxCycles" cycles="4000"/> 
			<!-- <noFoodLeftCondition class="$(SCS).tasks.cycle.condition.food.NoFoodLeft" />  -->
		</cycleTasks>
	</trial>


</experiment>